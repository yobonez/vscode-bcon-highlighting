{
    "scopeName": "lkon.injection",
    "injectionSelector": "L:string.template.js",
    "patterns": [
		{
			"include": "#lkon-embedded-identifier"
		},
		{
			"include": "#comments"
		},
        {
            "include": "#braces"
        },
		{
			"include": "#var-expr"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#punctuation"
		},
		{
			"include": "#regexp"
		}
	],
    "repository": {
		"lkon-embedded-identifier": {
			"patterns": [
				{
					"begin": "#startlkon",
					"end": "#endlkon",
					"name":"meta.embedded.test.lkon"
				}
			]
		},
		"comments": {
			"patterns": [{
				"name":"comment.line.lkon",
				"match": "^([\t ])*?#.*"
			}]
		},
        "braces": {
            "patterns": [{
                "name":"meta.brace.square.lkon",
                "match":"(\\[|\\])"
            }]
        },
		"var-expr": {
			"patterns": [
				{
					"name":"meta.var.expr.lkon",
					"match": "(@\\*|@)(\\b([a-zA-Z_][a-zA-Z0-9_]+)\\b)?",
					"captures": {
						"1": {"name": "storage.type.lkon"},
						"2": {"name": "variable.name.lkon"}
					}
				},
				{
					"name":"meta.var.expr.lkon",
					"match":"(=>)",
					"captures": {
						"1":{"name": "keyword.operator.assignment.lkon"}
					}
				},
				{
                    "name":"meta.var.expr.lkon",
                    "match":"(?<==>.*).*((\")(.*)(\"))",
                    "captures": {
                        "2":{"name": "string.quoted.double.lkon", "patterns": [{"name":"punctuation.definition.string.begin.lkon", "match": "\""}]},
                        "3":{"name": "string.quoted.double.lkon"},
						"4":{"name": "string.quoted.double.lkon", "patterns": [{"name":"punctuation.definition.string.end.lkon", "match": "\""}]}
                    }
                },
				{
					"name":"meta.var.expr.lkon",
					"match":"(?<==>.*)(?<!\".*)((\\b(this)\\b|(\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b))(\\.)){1}(([a-zA-Z0-9_]*)(\\.)?)*",
					"captures":{
						"3": {"name": "variable.language.this.lkon"},
						"4": {"name": "variable.other.object"},
						"6": {"name": "puntuation.accessor.lkon"},
						"7": {"name": "variable.other.property.lkon"}
					}
				},
				{
					"name":"meta.var.expr.lkon",
					"match":"(?<==>.*)\\b(Infinity|undefined|null|NaN|True|False)\\b",
					"captures":{
						"1":{"name":"constant.language.lkon"}	
					}
				},
				{
					"name":"meta.var.expr.lkon",
					"match": "(?<==>.*)(-)?(([\\d]+)(\\.)?)(e\\+|x|b)?",
					"captures": {
						"1": {"name":"keyword.operator.arithmetic"},
						"2": {"name": "constant.numeric.decimal.lkon"},
						"4": {"name": "meta.delimiter.decimal.period.lkon"},
						"5": {"name": "constant.numeric.decimal.lkon"}
					}
				},
				{
					"name":"meta.var.expr.lkon",
					"match": "(?<==>.*)(?<=\".*\")(ascii|base64|base64url|hex|ucs2|ucs-2|utf16le|utf-16le|utf8|utf-8|bin|binary|latin1)",
					"captures": {
						"1": {"name": "keyword.other.encoding.lkon"}
					}
				},
				{
					"name":"meta.var.expr.lkon",
					"match": "(?<==>.*)(/)(.*)(/)([dgimsuvy]*)",
					"captures": {
						"1":{"name":"string.regexp.lkon", "patterns": [{"name":"punctuation.definition.string.begin.lkon", "match":"/"}]},
						"2":{"name": "string.regexp.lkon"},
						"3":{"name":"string.regexp.lkon", "patterns": [{"name":"punctuation.definition.string.end.lkon", "match":"/"}]},
						"4":{"name": "keyword.other.lkon"}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name":"meta.importuseas.lkon",
					"match":"\\b(^import|^use|as)\\b",
					"captures": {
						"1":{"name":"keyword.control.lkon"}
					}
				},
				{
					"name":"meta.importuseas.lkon",
					"match":"(?<=(import|use|as) *)\\b(Infinity|undefined|null|NaN|True|False)\\b",
					"captures":{
						"2":{"name":"constant.language.lkon"}	
					}
				},
				{
					"name":"meta.importuseas.lkon",
					"match":"(?<=use.*|as.*)(-)?(([\\d]+)(\\.)?)(e\\+|x|b)?",
					"captures": {
						"1": {"name":"keyword.operator.arithmetic"},
						"2": {"name": "constant.numeric.decimal.lkon"},
						"4": {"name": "meta.delimiter.decimal.period.lkon"},
						"5": {"name": "constant.numeric.decimal.lkon"}
					}
				},
				{
					"name":"meta.importuseas.lkon",
					"match":"(?<=(use|import).*\".*\")(ascii|base64|base64url|hex|ucs2|ucs-2|utf16le|utf-16le|utf8|utf-8|bin|binary|latin1)",
					"captures": {
						"2": {"name": "keyword.other.encoding.lkon"}
					}
				},
				{
					"name":"meta.importuseas.lkon",
					"match": "(?<=(import|use|as) )(/)(.*)(/)([dgimsuvy]*)",
					"captures": {
						"2":{"name":"string.regexp.lkon", "patterns": [{"name":"punctuation.definition.string.begin.lkon", "match":"/"}]},
						"3":{"name": "string.regexp.lkon"},
						"4":{"name":"string.regexp.lkon", "patterns": [{"name":"punctuation.definition.string.end.lkon", "match":"/"}]},
						"5":{"name": "keyword.other.lkon"}
					}
				},
				{
					"name":"meta.importuseas.lkon",
					"match": "(?<=as )(\\b([a-zA-Z_][a-zA-Z0-9_]+)\\b)?",
					"captures": {
						"1": {"name": "variable.name.lkon"}
					}
				},
                {
                    "name":"meta.var.expr.lkon",
                    "match":"(?<=import *|use *|as *).*((\")(.*)(\"))",
                    "captures": {
                        "2":{"name": "string.quoted.double.lkon", "patterns": [{"name":"punctuation.definition.string.begin.lkon", "match": "\""}]},
                        "3":{"name": "string.quoted.double.lkon"},
						"4":{"name": "string.quoted.double.lkon", "patterns": [{"name":"punctuation.definition.string.end.lkon", "match": "\""}]}
                    }
                }
			]
		},

		"punctuation": {
			"patterns": [
				{
					"name": "punctuation.terminator.statement.lkon",
					"match": ";$"
				}
			]
		}
	}
}
  